# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-25 10:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_condition', models.CharField(choices=[('DIABETES-TYPE2', 'Diabetes Type2'), ('ARTHRITIS', 'Arthritis'), ('OSTEOPOROSIS', 'Osteoporosis'), ('ADHD', 'ADHD'), ('SLEEP-APNIA', 'Sleep Apnea')], help_text='health condition ex: Diabetes', max_length=50)),
                ('body_part', models.CharField(choices=[('GENERAL', 'General'), ('HEAD', 'Head'), ('EYE', 'Eye'), ('NOSE', 'Nose'), ('CHEST', 'Chest')], default='General', help_text=' Body part, ex: eye', max_length=30)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('B', 'Both')], default='B', help_text='gender ex: Female', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the modeled component', max_length=50)),
                ('short_desc', models.CharField(max_length=500)),
                ('text', models.TextField(help_text='full text of the component with risks and benefits applicable')),
                ('suggested_age_lower', models.SmallIntegerField(help_text='identifies the subscribers lowest eligible age limit')),
                ('suggested_age_upper', models.SmallIntegerField(help_text='identifies the subscribers upper eligible age limit')),
                ('available_to_gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('B', 'Both')], help_text='the eligible genders who can subscribe to this component', max_length=1)),
                ('status', models.CharField(choices=[('UC', 'UnderConstruction'), ('UR', 'UnderReview'), ('SU', 'Submitted'), ('PU', 'Published')], help_text='different statuses available for program', max_length=2)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, help_text='date and time customer first subscribed to this component')),
                ('publish_timestamp', models.DateTimeField(help_text='date and time customer first subscribed to this component', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_type', models.CharField(choices=[('HA', 'Habit'), ('HO', 'Hobby'), ('RO', 'Routine'), ('CH', 'Challenge')], help_text='Identifies the type of the component', max_length=2)),
                ('component_id', models.IntegerField(help_text='identifies the unique component like a Habit or Hobby')),
                ('program_id', models.ForeignKey(help_text='Identifies the program, this row component is associated with', on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.SmallIntegerField(choices=[(1, '*'), (2, '**'), (3, '***'), (4, '****'), (5, '*****')], help_text='identifies the users rating')),
                ('comments', models.TextField(blank=True, help_text='users review comments', null=True)),
                ('program_id', models.ForeignKey(help_text='uniquely identifies the program', on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
                ('user_id', models.ForeignKey(help_text='identifies the user who gave the rating and worote a review', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(help_text='customer given name for the component, like "my diabetes type2 program"', max_length=50, null=True)),
                ('status', models.CharField(choices=[('E', 'Effective'), ('D', 'Dormant'), ('C', 'Completed')], help_text='status of the program status', max_length=1)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, help_text='date and time customer first subscribed to this component')),
                ('last_update_timestamp', models.DateTimeField(auto_now=True, help_text='date and time customer last updated this component')),
                ('program_id', models.ForeignKey(help_text='identifies the program template to which customer subscribed to', on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
                ('user_id', models.ForeignKey(help_text='identifies the customer signed up for the program', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='healthcondition',
            unique_together=set([('health_condition', 'body_part', 'gender')]),
        ),
    ]
