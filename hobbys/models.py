from __future__ import unicode_literals

# Create your models here.

from django.db import models

from library.models import HealthComponent, HealthService, Review, gender_choices

"""Hobby is a template, Once customer subscribes to it, Hobby Service will be created"""

'''***Hobby***'''


class HobbyManager(models.Manager):

    def create(self, **validated_data):
        """
        Creates and saves hobby
        """

        Hobby = self.model(
            name = validated_data.get('name', None),
            short_desc = validated_data.get('short_desc', None),
            text = validated_data.get('text', None),
            status = validated_data.get('status', None),
            suggested_age_lower = validated_data.get('suggested_age_lower', None),
            suggested_age_upper = validated_data.get('suggested_age_upper', None),
            available_to_gender = validated_data.get('available_to_gender', None),
        )

        Hobby.save(using=self._db)
        return Hobby


class Hobby(HealthComponent):

    objects = HobbyManager()

'''***Service***'''


class HobbyServiceManager(models.Manager):

    def create(self, **validated_data):
        """
        Creates and saves Hobby service.
        """

        HobbyService = self.model(
            hobby_id = validated_data.get('hobby_id', None),
            user_id = validated_data.get('user_id', None),
            nick_name = validated_data.get('nick_name', None),
            status = validated_data.get('status', None),
            end_date = validated_data.get('end_date', None),
        )

        HobbyService.save(using=self._db)
        return HobbyService


class HobbyService(HealthService):

    # default id field generated by django serves as uniquely identifying field for hobby service
    objects = HobbyServiceManager()
    hobby_id = models.ForeignKey('Hobby', on_delete=models.CASCADE,
                                 help_text='identifies the hobby template to which customer subscribed to')

    class Meta:
        unique_together = ('hobby_id', 'user_id',)

'''***Review***'''


class HobbyReviewManager(models.Manager):

    def create(self, **validated_data):
        """
        Creates and saves hobby review.
        """

        HobbyReview = self.model(
            hobby_id = validated_data.get('hobby_id', None),
            user_id = validated_data.get('user_id', None),
            rating = validated_data.get('rating', None),
            comments = validated_data.get('comments', None),
        )

        HobbyReview.save(using=self._db)
        return HobbyReview


class HobbyReview(Review):
    # default id field generated by django serves as uniquely identifying field for hobby review
    objects = HobbyReviewManager()
    hobby_id = models.ForeignKey('Hobby', on_delete=models.CASCADE,
                                 help_text='uniquely identifies the hobby')

    class Meta:
        unique_together = ('hobby_id', 'user_id',)